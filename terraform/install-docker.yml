- name: Install Docker CE, Docker Compose and MySQL
  hosts: all_instances
  remote_user: ubuntu
  become: 'yes'
  tasks:
    - name: Add to key
      apt_key:
        url: 'https://download.docker.com/linux/ubuntu/gpg'
        id: 0EBFCD88
        state: present
    - name: Add to apt repo
      apt_repository:
        repo: 'deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable'
        filename: docker
        update_cache: 'yes'
        state: present
    - name: Install Docker
      apt:
        name: docker-ce
        state: latest
        update_cache: true
    - name: Add Ubuntu to docker-group
      user:
        name: ubuntu
        groups: docker
        append: 'yes'

    # Install Docker Compose
    - name: Download Docker Compose
      get_url:
        url: "https://github.com/docker/compose/releases/download/v2.18.0/docker-compose-linux-x86_64"
        dest: /usr/local/bin/docker-compose
        mode: '0755'
    - name: Create Docker Compose symlink (optional)
      file:
        src: /usr/local/bin/docker-compose
        dest: /usr/bin/docker-compose
        state: link

    - name: Installing Mysql  and dependencies
      when: inventory_hostname == 'database'
      become: yes
      package:
        name: "{{item}}"
        state: present
        update_cache: yes
      loop:
        - mysql-server
        - mysql-client 
        - python3-mysqldb
        - libmysqlclient-dev
        
    - name: start and enable mysql service
      when: inventory_hostname == 'database'
      service:
        name: mysql
        state: started
        enabled: yes
    - name: creating mysql user (medium_post)
      when: inventory_hostname == 'database'
      mysql_user:
        name: "{{mysql_user}}"
        password: "{{ mysql_user_password }}"
        priv: '*.*:ALL'
        host: '%'
        state: present
    - name: creating medium_db
      when: inventory_hostname == 'database'
      mysql_db:
        name: "{{mysql_database}}"
        state: present
    - name: Enable remote login to mysql
      when: inventory_hostname == 'database'
      lineinfile:
        path: /etc/mysql/mysql.conf.d/mysqld.cnf
        regexp: '^bind-address'
        line: 'bind-address = 0.0.0.0'
        backup: yes
      notify:
        - Restart mysql

  handlers:
    - name: Restart mysql
      when: inventory_hostname == 'database'
      service:
        name: mysql
        state: restarted
